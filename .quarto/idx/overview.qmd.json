{"title":"Folk Singing Dashboard","markdown":{"yaml":{"title":"Folk Singing Dashboard","format":{"dashboard":{"sidebar":false,"theme":"sandstone","logo":"data/images/AccessFolk.jpg","nav-buttons":["github"],"github":"https://github.com/g-accad/access_folk_dashboard"}},"editor_options":{"chunk_output_type":"console"}},"headingText":"Read the cleaned dataset","containsRefs":false,"markdown":"\n\n```{r setup}\n#| message: false\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(scales)\nlibrary(DT)\nlibrary(waffle)\n\ntheme_set(theme_minimal(base_size = 24, base_family = \"Atkinson Hyperlegible\"))\n```\n\n```{r load}\ndata <- read_csv(\"data/final_dataset.csv\")\n```\n\n# Overview {orientation=\"columns\"}\n\n## Column {width=\"60%\"}\n\n```{r}\n# Pre-calculate stats\nnum_males <- sum(data$Gender == \"Male\", na.rm = TRUE)\np_males <- num_males / sum(!is.na(data$Gender))\np_males_color <- \"primary\"\n\nnum_white <- sum(data$Ethnicity == \"White British\", na.rm = TRUE)\np_white <- num_white / sum(!is.na(data$Ethnicity))\np_white_color <- \"success\"\n\n\np_age_color <- \"info\"\nage_60plus <- c(\"60-64\", \"65-69\", \"70-74\", \"75-79\", \"80-84\", \"85-89\", \"old\", \"Too old\")\np_60plus <- sum(data$Age %in% age_60plus, na.rm = TRUE) / sum(!is.na(data$Age))\n\n\n```\n\n\n\n### Row {height=\"20%\"}\n\n```{r}\n#| content: valuebox\n#| title: \"Male\"\nlist(icon = \"gender-male\", color = p_males_color, value = label_percent(accuracy = 0.1)(p_males))\n```\n\n```{r}\n#| content: valuebox\n#| title: \"White British\"\nlist(icon = \"globe-americas\", color = p_white_color, value = label_percent(accuracy = 0.1)(p_white))\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Aged 60+\"\nlist(\n  icon = \"graph-up-arrow\",\n  color = \"warning\",\n  value = label_percent(accuracy = 0.1)(p_60plus)\n)\n\n```\n\n\n\n\n### Row {height=\"80%\" .tabset}\n\n\n```{r}\n#| title: Age Distribution\n\n\n# Create frequency table\nage_summary <- data %>%\n  filter(!is.na(Age)) %>%\n  count(Age) %>%\n  mutate(Percentage = n / sum(n) * 100)\n\n# Create percentage-based bar chart\nage_percent_plot <- plot_ly(\n  data = age_summary,\n  x = ~Age,\n  y = ~Percentage,\n  type = \"bar\",\n  marker = list(color = 'rgba(0, 123, 255, 0.7)')\n) %>%\nlayout(\n  xaxis = list(title = \"Age\", tickangle = 0),  # horizontal labels\n  yaxis = list(title = \"Percentage (%)\", ticksuffix = \"%\"))\n\nage_percent_plot\n\n\n```\n\n```{r}\n#| title: Gender Chart\nplot_ly(\n  data = filter(data, !is.na(Gender)),\n  labels = ~Gender, type = \"pie\", hole = 0.4,\n  marker = list(colors = c(\"lightblue\", \"hotpink\", \"purple\"))\n)\n```\n\n```{r}\n#| title: Age by Gender\n\nage_gender_counts <- data %>%\n  filter(!is.na(Age), !is.na(Gender)) %>%\n  count(Age, Gender) %>%\n  group_by(Age) %>%\n  mutate(Percentage = n / sum(n) * 100)\n\n\nage_hist_percent <- plot_ly(\n  data = age_gender_counts,\n  x = ~Age,\n  y = ~Percentage,\n  color = ~Gender,\n  type = \"bar\"\n) %>%\nlayout(\n  barmode = \"group\",\n  xaxis = list(title = \"Age\", tickangle = 0),  # horizontal labels\n  yaxis = list(title = \"Percentage (%)\")\n)\n\nage_hist_percent\n\n```\n\n```{r}\n#| title: Ethnicity\nethnicity_counts <- table(data$Ethnicity)\nplot_ly(\n  labels = names(ethnicity_counts),\n  values = ethnicity_counts,\n  type = \"pie\", hole = 0.5,\n  textinfo = \"percent\"\n)\n```\n\n```{r}\n#| title: Sexual Orientation\n\n# Count cleaned values\ns <- table(data$Sexuality_clean)\n\n# Create waffle chart\nwaffle(s, rows = 15, size = 0.5)\n\n```\n\n## Column {width=\"40%\"}\n\n![](data/images/map_2.png){width=100% height=800px}\n\n\n# Political Engagement by Age and Party {orientation=\"columns\"}\n\n## Column {width=\"40%\"}\n\n```{r}\n#| echo: false\ncat(\"\nThis graph explores how political engagement varies across age groups, broken down by political party.\nYou can see how each party's supporters are distributed in terms of average engagement level.\n\nThe 'Overall' column shows the average engagement for each age group regardless of party.\n\")\n```\n\n## Column {width=\"60%\"}\n\n```{r}\n#| echo: false\n\n# Clean relevant columns\ndf <- data %>%\n  filter(!is.na(Age), !is.na(Political_engagement), !is.na(Political_party)) %>%\n  select(Age, Political_engagement, Political_party)\n\n# Calculate average engagement by Age and Party\nby_party <- df %>%\n  group_by(Age, Political_party) %>%\n  summarise(Average_engagement = mean(Political_engagement), .groups = \"drop\")\n\n# Calculate overall average engagement by Age\noverall <- df %>%\n  group_by(Age) %>%\n  summarise(Political_party = \"Overall\", Average_engagement = mean(Political_engagement))\n\n# Combine both\nplot_df <- bind_rows(by_party, overall)\n\n# Define consistent factor levels to order bars\nplot_df$Political_party <- factor(plot_df$Political_party, \n                                  levels = c(\"Conservative Party\", \"Green Party\", \"Labour Party\", \"Liberal Democrats\", \"Other\", \"Overall\"))\n\n# Plot\nplot_ly(\n  data = plot_df,\n  x = ~Age,\n  y = ~Average_engagement,\n  color = ~Political_party,\n  type = \"bar\"\n) %>%\nlayout(\n  barmode = \"group\",\n  xaxis = list(title = \"Age Group\", tickangle = -45),\n  yaxis = list(title = \"Average Political Engagement (0â€“10)\"),\n  legend = list(title = list(text = \"Party\"))\n)\n\n```\n\n\n","srcMarkdownNoYaml":"\n\n```{r setup}\n#| message: false\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(scales)\nlibrary(DT)\nlibrary(waffle)\n\ntheme_set(theme_minimal(base_size = 24, base_family = \"Atkinson Hyperlegible\"))\n```\n\n```{r load}\n# Read the cleaned dataset\ndata <- read_csv(\"data/final_dataset.csv\")\n```\n\n# Overview {orientation=\"columns\"}\n\n## Column {width=\"60%\"}\n\n```{r}\n# Pre-calculate stats\nnum_males <- sum(data$Gender == \"Male\", na.rm = TRUE)\np_males <- num_males / sum(!is.na(data$Gender))\np_males_color <- \"primary\"\n\nnum_white <- sum(data$Ethnicity == \"White British\", na.rm = TRUE)\np_white <- num_white / sum(!is.na(data$Ethnicity))\np_white_color <- \"success\"\n\n\np_age_color <- \"info\"\nage_60plus <- c(\"60-64\", \"65-69\", \"70-74\", \"75-79\", \"80-84\", \"85-89\", \"old\", \"Too old\")\np_60plus <- sum(data$Age %in% age_60plus, na.rm = TRUE) / sum(!is.na(data$Age))\n\n\n```\n\n\n\n### Row {height=\"20%\"}\n\n```{r}\n#| content: valuebox\n#| title: \"Male\"\nlist(icon = \"gender-male\", color = p_males_color, value = label_percent(accuracy = 0.1)(p_males))\n```\n\n```{r}\n#| content: valuebox\n#| title: \"White British\"\nlist(icon = \"globe-americas\", color = p_white_color, value = label_percent(accuracy = 0.1)(p_white))\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Aged 60+\"\nlist(\n  icon = \"graph-up-arrow\",\n  color = \"warning\",\n  value = label_percent(accuracy = 0.1)(p_60plus)\n)\n\n```\n\n\n\n\n### Row {height=\"80%\" .tabset}\n\n\n```{r}\n#| title: Age Distribution\n\n\n# Create frequency table\nage_summary <- data %>%\n  filter(!is.na(Age)) %>%\n  count(Age) %>%\n  mutate(Percentage = n / sum(n) * 100)\n\n# Create percentage-based bar chart\nage_percent_plot <- plot_ly(\n  data = age_summary,\n  x = ~Age,\n  y = ~Percentage,\n  type = \"bar\",\n  marker = list(color = 'rgba(0, 123, 255, 0.7)')\n) %>%\nlayout(\n  xaxis = list(title = \"Age\", tickangle = 0),  # horizontal labels\n  yaxis = list(title = \"Percentage (%)\", ticksuffix = \"%\"))\n\nage_percent_plot\n\n\n```\n\n```{r}\n#| title: Gender Chart\nplot_ly(\n  data = filter(data, !is.na(Gender)),\n  labels = ~Gender, type = \"pie\", hole = 0.4,\n  marker = list(colors = c(\"lightblue\", \"hotpink\", \"purple\"))\n)\n```\n\n```{r}\n#| title: Age by Gender\n\nage_gender_counts <- data %>%\n  filter(!is.na(Age), !is.na(Gender)) %>%\n  count(Age, Gender) %>%\n  group_by(Age) %>%\n  mutate(Percentage = n / sum(n) * 100)\n\n\nage_hist_percent <- plot_ly(\n  data = age_gender_counts,\n  x = ~Age,\n  y = ~Percentage,\n  color = ~Gender,\n  type = \"bar\"\n) %>%\nlayout(\n  barmode = \"group\",\n  xaxis = list(title = \"Age\", tickangle = 0),  # horizontal labels\n  yaxis = list(title = \"Percentage (%)\")\n)\n\nage_hist_percent\n\n```\n\n```{r}\n#| title: Ethnicity\nethnicity_counts <- table(data$Ethnicity)\nplot_ly(\n  labels = names(ethnicity_counts),\n  values = ethnicity_counts,\n  type = \"pie\", hole = 0.5,\n  textinfo = \"percent\"\n)\n```\n\n```{r}\n#| title: Sexual Orientation\n\n# Count cleaned values\ns <- table(data$Sexuality_clean)\n\n# Create waffle chart\nwaffle(s, rows = 15, size = 0.5)\n\n```\n\n## Column {width=\"40%\"}\n\n![](data/images/map_2.png){width=100% height=800px}\n\n\n# Political Engagement by Age and Party {orientation=\"columns\"}\n\n## Column {width=\"40%\"}\n\n```{r}\n#| echo: false\ncat(\"\nThis graph explores how political engagement varies across age groups, broken down by political party.\nYou can see how each party's supporters are distributed in terms of average engagement level.\n\nThe 'Overall' column shows the average engagement for each age group regardless of party.\n\")\n```\n\n## Column {width=\"60%\"}\n\n```{r}\n#| echo: false\n\n# Clean relevant columns\ndf <- data %>%\n  filter(!is.na(Age), !is.na(Political_engagement), !is.na(Political_party)) %>%\n  select(Age, Political_engagement, Political_party)\n\n# Calculate average engagement by Age and Party\nby_party <- df %>%\n  group_by(Age, Political_party) %>%\n  summarise(Average_engagement = mean(Political_engagement), .groups = \"drop\")\n\n# Calculate overall average engagement by Age\noverall <- df %>%\n  group_by(Age) %>%\n  summarise(Political_party = \"Overall\", Average_engagement = mean(Political_engagement))\n\n# Combine both\nplot_df <- bind_rows(by_party, overall)\n\n# Define consistent factor levels to order bars\nplot_df$Political_party <- factor(plot_df$Political_party, \n                                  levels = c(\"Conservative Party\", \"Green Party\", \"Labour Party\", \"Liberal Democrats\", \"Other\", \"Overall\"))\n\n# Plot\nplot_ly(\n  data = plot_df,\n  x = ~Age,\n  y = ~Average_engagement,\n  color = ~Political_party,\n  type = \"bar\"\n) %>%\nlayout(\n  barmode = \"group\",\n  xaxis = list(title = \"Age Group\", tickangle = -45),\n  yaxis = list(title = \"Average Political Engagement (0â€“10)\"),\n  legend = list(title = list(text = \"Party\"))\n)\n\n```\n\n\n"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"overview.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.40","page-layout":"custom","editor":"visual","title":"Folk Singing Dashboard","editor_options":{"chunk_output_type":"console"},"sidebar":false,"theme":"sandstone","logo":"data/images/AccessFolk.jpg","nav-buttons":["github"],"github":"https://github.com/g-accad/access_folk_dashboard"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}